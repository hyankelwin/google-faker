// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header component should be able to render Header component when page is search 1`] = `
"<Header page=\\"search\\" onClickOptions={[Function: mockConstructor] { _isMockFunction: true, getMockImplementation: [Function (anonymous)], mock: Object [Object: null prototype] { calls: [], instances: [], invocationCallOrder: [], results: [] }, mockClear: [Function (anonymous)], mockReset: [Function (anonymous)], mockRestore: [Function (anonymous)], mockReturnValueOnce: [Function (anonymous)], mockResolvedValueOnce: [Function (anonymous)], mockRejectedValueOnce: [Function (anonymous)], mockReturnValue: [Function (anonymous)], mockResolvedValue: [Function (anonymous)], mockRejectedValue: [Function (anonymous)], mockImplementationOnce: [Function (anonymous)], mockImplementation: [Function (anonymous)], mockReturnThis: [Function (anonymous)], mockName: [Function (anonymous)], getMockName: [Function (anonymous)] }} onClickNavigate={[Function: mockConstructor] { _isMockFunction: true, getMockImplementation: [Function (anonymous)], mock: Object [Object: null prototype] { calls: [], instances: [], invocationCallOrder: [], results: [] }, mockClear: [Function (anonymous)], mockReset: [Function (anonymous)], mockRestore: [Function (anonymous)], mockReturnValueOnce: [Function (anonymous)], mockResolvedValueOnce: [Function (anonymous)], mockRejectedValueOnce: [Function (anonymous)], mockReturnValue: [Function (anonymous)], mockResolvedValue: [Function (anonymous)], mockRejectedValue: [Function (anonymous)], mockImplementationOnce: [Function (anonymous)], mockImplementation: [Function (anonymous)], mockReturnThis: [Function (anonymous)], mockName: [Function (anonymous)], getMockName: [Function (anonymous)] }}>
  <styled.div page=\\"search\\">
    <div className=\\"sc-aXZVg ecOmaW\\">
      <div>
        <div>
          <styled.img data-testid=\\"google-image\\" src=\\"logo-google.png\\" onClick={[Function: onClick]} alt=\\"Image of google search\\">
            <img data-testid=\\"google-image\\" src=\\"logo-google.png\\" onClick={[Function: onClick]} alt=\\"Image of google search\\" className=\\"sc-gEvEer bhHMwT\\" />
          </styled.img>
          <FormSearch page=\\"search\\" showButton={false} isMedium={true}>
            <ForwardRef onSubmit={[Function (anonymous)]}>
              <ForwardRef initialData={{...}} onSubmit={[Function (anonymous)]}>
                <form onSubmit={[Function (anonymous)]}>
                  <styled.div isMedium={true}>
                    <div className=\\"sc-gsFSXq fvHuLm\\">
                      <Input name=\\"search\\" icon={[Function: FiSearch]} data-testid=\\"input-search\\" onChange={[Function: onChange]} isMedium={true} defaultValue={[undefined]} isIconClose={true} onClearInput={[Function: onClearInput]} isEmpty={[undefined]}>
                        <styled.div isMedium={true}>
                          <div className=\\"sc-imWYAI eNglSV\\">
                            <FiSearch size={20}>
                              <IconBase attr={{...}} size={20}>
                                <svg stroke=\\"currentColor\\" fill=\\"none\\" strokeWidth=\\"2\\" viewBox=\\"0 0 24 24\\" strokeLinecap=\\"round\\" strokeLinejoin=\\"round\\" className={[undefined]} style={{...}} height={20} width={20} xmlns=\\"http://www.w3.org/2000/svg\\">
                                  <circle cx=\\"11\\" cy=\\"11\\" r=\\"8\\" />
                                  <line x1=\\"21\\" y1=\\"21\\" x2=\\"16.65\\" y2=\\"16.65\\" />
                                </svg>
                              </IconBase>
                            </FiSearch>
                            <input data-testid=\\"input-search\\" defaultValue={[undefined]} onChange={[Function: onChange]} />
                          </div>
                        </styled.div>
                      </Input>
                    </div>
                  </styled.div>
                </form>
              </ForwardRef>
            </ForwardRef>
          </FormSearch>
        </div>
      </div>
      <div>
        <styled.div page=\\"search\\">
          <div className=\\"sc-eqUAAy eLIJBU\\">
            <SlOptionsVertical data-testid=\\"options-icon\\" onClick={[Function: onClick]} size={20}>
              <IconBase attr={{...}} data-testid=\\"options-icon\\" onClick={[Function: onClick]} size={20}>
                <svg stroke=\\"currentColor\\" fill=\\"currentColor\\" strokeWidth=\\"0\\" viewBox=\\"0 0 1024 1024\\" data-testid=\\"options-icon\\" onClick={[Function: onClick]} className={[undefined]} style={{...}} height={20} width={20} xmlns=\\"http://www.w3.org/2000/svg\\">
                  <path d=\\"M388.8 896.4v-27.198c.6-2.2 1.6-4.2 2-6.4 8.8-57.2 56.4-102.4 112.199-106.2 62.4-4.4 115.2 31.199 132.4 89.199 2.2 7.6 3.8 15.6 5.8 23.4v27.2c-.6 1.8-1.6 3.399-1.8 5.399-8.6 52.8-46.6 93-98.6 104.4-4 .8-8 2-12 3h-27.2c-1.8-.6-3.6-1.6-5.4-1.8-52-8.4-91.599-45.4-103.6-96.8-1.2-5-2.6-9.6-3.8-14.2zm252.4-768.797l-.001 27.202c-.6 2.2-1.6 4.2-1.8 6.4-9 57.6-56.8 102.6-113.2 106.2-62.2 4-114.8-32-131.8-90.2-2.2-7.401-3.8-15-5.6-22.401v-27.2c.6-1.8 1.6-3.4 2-5.2 9.6-52 39.8-86 90.2-102.2 6.6-2.2 13.6-3.4 20.4-5.2h27.2c1.8.6 3.6 1.6 5.4 1.8 52.2 8.6 91.6 45.4 103.6 96.8 1.201 4.8 2.401 9.4 3.601 13.999zm-.001 370.801v27.2c-.6 2.2-1.6 4.2-2 6.4-9 57.4-58.6 103.6-114.6 106-63 2.8-116.4-35.2-131.4-93.8-1.6-6.2-3-12.4-4.4-18.6v-27.2c.6-2.2 1.6-4.2 2-6.4 8.8-57.4 58.6-103.601 114.6-106.2 63-3 116.4 35.2 131.4 93.8 1.6 6.4 3 12.6 4.4 18.8z\\" />
                </svg>
              </IconBase>
            </SlOptionsVertical>
          </div>
        </styled.div>
        <styled.div page=\\"search\\">
          <div className=\\"sc-fqkvVR cMyPno\\">
            <IoApps size={20}>
              <IconBase attr={{...}} size={20}>
                <svg stroke=\\"currentColor\\" fill=\\"currentColor\\" strokeWidth=\\"0\\" viewBox=\\"0 0 512 512\\" className={[undefined]} style={{...}} height={20} width={20} xmlns=\\"http://www.w3.org/2000/svg\\">
                  <path d=\\"M104 160a56 56 0 1156-56 56.06 56.06 0 01-56 56zm152 0a56 56 0 1156-56 56.06 56.06 0 01-56 56zm152 0a56 56 0 1156-56 56.06 56.06 0 01-56 56zM104 312a56 56 0 1156-56 56.06 56.06 0 01-56 56zm152 0a56 56 0 1156-56 56.06 56.06 0 01-56 56zm152 0a56 56 0 1156-56 56.06 56.06 0 01-56 56zM104 464a56 56 0 1156-56 56.06 56.06 0 01-56 56zm152 0a56 56 0 1156-56 56.06 56.06 0 01-56 56zm152 0a56 56 0 1156-56 56.06 56.06 0 01-56 56z\\" />
                </svg>
              </IconBase>
            </IoApps>
            <styled.img src=\\"user.png\\" alt=\\"Image to simulate user logged\\">
              <img src=\\"user.png\\" alt=\\"Image to simulate user logged\\" className=\\"sc-iGgWBj eckbzv\\" />
            </styled.img>
          </div>
        </styled.div>
      </div>
    </div>
  </styled.div>
</Header>"
`;

exports[`Header component should be able to render Header component with success 1`] = `
"<Header page=\\"home\\" onClickOptions={[Function: mockConstructor] { _isMockFunction: true, getMockImplementation: [Function (anonymous)], mock: Object [Object: null prototype] { calls: [], instances: [], invocationCallOrder: [], results: [] }, mockClear: [Function (anonymous)], mockReset: [Function (anonymous)], mockRestore: [Function (anonymous)], mockReturnValueOnce: [Function (anonymous)], mockResolvedValueOnce: [Function (anonymous)], mockRejectedValueOnce: [Function (anonymous)], mockReturnValue: [Function (anonymous)], mockResolvedValue: [Function (anonymous)], mockRejectedValue: [Function (anonymous)], mockImplementationOnce: [Function (anonymous)], mockImplementation: [Function (anonymous)], mockReturnThis: [Function (anonymous)], mockName: [Function (anonymous)], getMockName: [Function (anonymous)] }} onClickNavigate={[Function: mockConstructor] { _isMockFunction: true, getMockImplementation: [Function (anonymous)], mock: Object [Object: null prototype] { calls: [], instances: [], invocationCallOrder: [], results: [] }, mockClear: [Function (anonymous)], mockReset: [Function (anonymous)], mockRestore: [Function (anonymous)], mockReturnValueOnce: [Function (anonymous)], mockResolvedValueOnce: [Function (anonymous)], mockRejectedValueOnce: [Function (anonymous)], mockReturnValue: [Function (anonymous)], mockResolvedValue: [Function (anonymous)], mockRejectedValue: [Function (anonymous)], mockImplementationOnce: [Function (anonymous)], mockImplementation: [Function (anonymous)], mockReturnThis: [Function (anonymous)], mockName: [Function (anonymous)], getMockName: [Function (anonymous)] }}>
  <styled.div page=\\"home\\">
    <div className=\\"sc-aXZVg faNpxW\\">
      <div>
        <styled.p>
          <p className=\\"sc-dcJsrY cDJWQS\\">
            Agile Content Frontend test
          </p>
        </styled.p>
      </div>
      <div>
        <styled.div page=\\"home\\">
          <div className=\\"sc-fqkvVR eJjnVN\\">
            <IoApps size={20}>
              <IconBase attr={{...}} size={20}>
                <svg stroke=\\"currentColor\\" fill=\\"currentColor\\" strokeWidth=\\"0\\" viewBox=\\"0 0 512 512\\" className={[undefined]} style={{...}} height={20} width={20} xmlns=\\"http://www.w3.org/2000/svg\\">
                  <path d=\\"M104 160a56 56 0 1156-56 56.06 56.06 0 01-56 56zm152 0a56 56 0 1156-56 56.06 56.06 0 01-56 56zm152 0a56 56 0 1156-56 56.06 56.06 0 01-56 56zM104 312a56 56 0 1156-56 56.06 56.06 0 01-56 56zm152 0a56 56 0 1156-56 56.06 56.06 0 01-56 56zm152 0a56 56 0 1156-56 56.06 56.06 0 01-56 56zM104 464a56 56 0 1156-56 56.06 56.06 0 01-56 56zm152 0a56 56 0 1156-56 56.06 56.06 0 01-56 56zm152 0a56 56 0 1156-56 56.06 56.06 0 01-56 56z\\" />
                </svg>
              </IconBase>
            </IoApps>
            <styled.img src=\\"user.png\\" alt=\\"Image to simulate user logged\\">
              <img src=\\"user.png\\" alt=\\"Image to simulate user logged\\" className=\\"sc-iGgWBj eckbzv\\" />
            </styled.img>
          </div>
        </styled.div>
      </div>
    </div>
  </styled.div>
</Header>"
`;
